<<<<<<< Updated upstream
=======
using FluentValidation.AspNetCore;
>>>>>>> Stashed changes
using Serilog;
using Serilog.Sinks.SystemConsole.Themes;
using TestWebAPI.DL.Interfaces;
using TestWebAPI.DL.Repositories.AuthorRepository;
using TestWebAPI.DL.Repositories.BookRepository;
using TestWebAPI.DL.Repositories.MemoryRepository;

var logger = new LoggerConfiguration()
    .Enrich.FromLogContext()
    .WriteTo.Console(theme: AnsiConsoleTheme.Code)
    .CreateLogger();
var builder = WebApplication.CreateBuilder(args);

builder.Logging.AddSerilog(logger);
// Add services to the container.
builder.Services.AddSingleton<IUserRepository, PersonInMemoryRepository>();
builder.Services.AddSingleton<IAuthorRepository, AuthorInMemoryRepository>();
builder.Services.AddSingleton<IBookRepository, BookInMemoryRepository>();
builder.Services.AddAutoMapper(typeof(Program));
<<<<<<< Updated upstream

=======
builder.Services.AddFluentValidation().
    AddFluentValidationClientsideAdapters
>>>>>>> Stashed changes
//builder.Services.RegisterRepositories().RegisterServices();

builder.Services.AddControllers();
// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen();

var app = builder.Build();

// Configure the HTTP request pipeline.
if (app.Environment.IsDevelopment())
{
    app.UseSwagger();
    app.UseSwaggerUI();
}

app.UseHttpsRedirection();

app.UseAuthorization();

app.MapControllers();

app.Run();
